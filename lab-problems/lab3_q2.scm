#lang sicp
(define (abs x)
  (cond ((> x 0) x)
        (else (- x))))
(define (xor a b)
  (or (and a (not b))
      (and (not a) b)))
(define (gcd x y)
  (cond ((< x y) (gcd y x))
        ((= y 0) x)
        (else (gcd y (remainder x y)))))
(define (make-rat n d)
  (let ((g (gcd (abs n) (abs d))))
    (cons (/ n g) (/ d g))))
(define (numer x) (car x))
(define (denom x) (cdr x))
(define (print-rat x)
  (newline)
  (display (numer x))
  (display "/")
  (display (denom x)))

(print-rat (make-rat 4 14))

